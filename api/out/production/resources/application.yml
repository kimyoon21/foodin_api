server:
  port: ${PORT:9000}
spring:
  pid:
    file: spring.pid
  security:
    user:
      name: user
      password: test
security:
  oauth2:
    client:
      provider:
        kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          user-name-attribute: id
        naver:
          authorization-uri: https://nid.naver.com/oauth2.0/authorize
          token-uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user-name-attribute: response
        my-client:
          authorization-uri: http://localhost:9999/oauth/authorize
          token-uri: http://localhost:9999/oauth/token
          user-info-uri: http://localhost:9999/me
          user-name-attribute: name

      registration:
        facebook:
          client-id: 1860604914171390
          client-secret: b839841d9abf2617ece8e6fa492404ec
        kakao:
          client-name: Kakao
          client-id: 36cf3898c3072e555ea6a49b299f8a06
          client-secret: 36cf3898c3072e555ea6a49b299f8a06
          client-authentication-method: post
          authorization-grant-type: authorization_code
          redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
          scope: profile,account_email
        naver:
          client-name: Naver
          client-id: Q_OL8Al6dwbZ5tJ4XSN_
          client-secret: 8qix28zKBP
          client-authentication-method: post
          authorization-grant-type: authorization_code
          redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
          scope: profile,account_email

#        registration:
#          my-client:
#            client-name: foodin-api
#            client-id: foodin
#            client-secret: foodin1
#            client-authentication-method: basic
#            authorization-grant-type: authorization_code
#            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
#            scope: read
#        provider:
#          my-client:
#            authorization-uri: http://localhost:8080/oauth/authorize
#            token-uri: http://localhost:8080/oauth/token
#            user-info-uri: http://localhost:8080/me
#            user-name-attribute: name

messages:
  basename: messages
  encoding: utf-8

logging:
  level:
    org.springframework: INFO
  pattern:
    # default : %clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%-5level) %clr(${PID:- }){magenta}  %clr(---){faint} [%thread, %X{x-request-uid:--}, %X{sessionId:--}] %clr(%logger{35}){cyan} %clr(:){faint} %msg %n"
