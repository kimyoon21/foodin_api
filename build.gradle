buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlin_version}")
        classpath "org.jmailen.gradle:kotlinter-gradle:2.2.0"
    }
}


group = 'app.foodin'
version = '1.2.1-SNAPSHOT'

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        mavenLocal()
    }
    apply plugin: 'idea'
    apply plugin: 'kotlin'
    apply plugin: "org.jmailen.kotlinter"
    apply plugin: "kotlin-noarg"
    apply plugin: "io.spring.dependency-management"

    noArg {
        annotation("app.foodin.core.annotation.KotlinNoArgConstructor")
    }


    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    kotlinter {
        ignoreFailures = false
        indentSize = 4
        continuationIndentSize = 4
        reporters = ['checkstyle', 'plain']
    }
}


subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'kotlin-spring'
    apply plugin: 'io.spring.dependency-management'


    ext {
        springCloudVersion = 'Hoxton.RC2'
        swaggerVersion = '3.0.0-SNAPSHOT'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.2'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'


        implementation('org.springframework.boot:spring-boot-starter-cache')
        implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
        implementation('org.springframework.security:spring-security-oauth2-client')
        implementation('org.springframework.boot:spring-boot-starter-batch')
        implementation('org.springframework.boot:spring-boot-starter-hateoas')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
        testImplementation('org.springframework.batch:spring-batch-test')
        testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')

        implementation('commons-io:commons-io:2.6')
        implementation('org.apache.commons:commons-lang3:3.7')
        runtime('mysql:mysql-connector-java')
//        testCompile('com.h2database:h2')
    }


}

task preBuild << {
    formatKotlin
}
build.dependsOn preBuild
